/**
 * @file Firebase Security Rules for Bhavesh's Portfolio
 * @core Philosophy This ruleset provides basic security for Bhavesh's portfolio data.
 *  It focuses on preventing unauthorized data access and modification.
 *  Write access to most collections is disabled except for the 'messages' collection where authenticated and anonymous users can submit messages.
 *  Read access is generally open, but restricted for the 'messages' collection.
 * @data Structure: The database consists of top-level collections for projects, skills, contact info, about me, and messages.
 *  Each collection contains documents with data related to the respective entity.
 * @key Security Decisions:
 *  - Listing of messages is explicitly denied to all users.
 *  - Schema validation is relaxed for prototyping speed. Focus is on authorization.
 * @denormalization for Authorization: N/A
 * @structural Segregation: N/A
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants read access to projects for anyone, but restricts write access.
     * @path /projects/{projectId}
     * @allow get, list: if true;
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @deny create: if true; // Any create request will be denied.
     * @deny update: if true; // Any update request will be denied.
     * @deny delete: if true; // Any delete request will be denied.
     * @principle Allows public read access but restricts write access.
     */
    match /projects/{projectId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants read access to skills for anyone, but restricts write access.
     * @path /skills/{skillId}
     * @allow get, list: if true;
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @deny create: if true; // Any create request will be denied.
     * @deny update: if true; // Any update request will be denied.
     * @deny delete: if true; // Any delete request will be denied.
     * @principle Allows public read access but restricts write access.
     */
    match /skills/{skillId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants read access to contact info for anyone, but restricts write access.
     * @path /contactInfo/{contactInfoId}
     * @allow get, list: if true;
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @deny create: if true; // Any create request will be denied.
     * @deny update: if true; // Any update request will be denied.
     * @deny delete: if true; // Any delete request will be denied.
     * @principle Allows public read access but restricts write access.
     */
    match /contactInfo/{contactInfoId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants read access to about me section for anyone, but restricts write access.
     * @path /aboutMe/{aboutMeId}
     * @allow get, list: if true;
     * @allow create: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @deny create: if true; // Any create request will be denied.
     * @deny update: if true; // Any update request will be denied.
     * @deny delete: if true; // Any delete request will be denied.
     * @principle Allows public read access but restricts write access.
     */
    match /aboutMe/{aboutMeId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows anyone to create messages, but restricts listing to no one.
     * @path /messages/{messageId}
     * @allow create: if true;
     * @allow get: if false;
     * @allow list: if false;
     * @allow update: if false;
     * @allow delete: if false;
     * @deny get: if true;
     * @deny list: if true;
     * @deny update: if true;
     * @deny delete: if true;
     * @principle Allows public create access but restricts read and write access.
     */
    match /messages/{messageId} {
      allow create: if true;
      allow get: if false;
      allow list: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}