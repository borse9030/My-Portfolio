/**
 * @file Firestore Security Rules
 * @description This ruleset defines access control for Bhavesh's portfolio data.
 *
 * Core Philosophy:
 *  - Public read access for content displayed on the portfolio (projects, skills, about me, contact info).
 *  - Public write access for submitting contact form messages.
 *  - No specific user authentication or roles are enforced beyond allowing any signed-in or anonymous user
 *    to submit contact form messages.
 *
 * Data Structure:
 *  - Top-level collections for each entity: /projects/{projectId}, /skills/{skillId}, /contactInfo/{contactInfoId},
 *    /aboutMe/{aboutMeId}, /messages/{messageId}.
 *
 * Key Security Decisions:
 *  - Listing of any collections is public.
 *  - Schema validation is not enforced in this prototyping phase, except for ownership on creation where necessary.
 *  - All write operations are denied.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants public read access to project data.
     * @path /projects/{projectId}
     * @allow (get, list): Any user can read project details.
     * @deny (create, update, delete): No one can create, update, or delete projects.
     * @principle Allows public read access for portfolio content.
     */
    match /projects/{projectId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants public read access to skill data.
     * @path /skills/{skillId}
     * @allow (get, list): Any user can read skill details.
     * @deny (create, update, delete): No one can create, update, or delete skills.
     * @principle Allows public read access for portfolio content.
     */
    match /skills/{skillId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants public read access to contact information.
     * @path /contactInfo/{contactInfoId}
     * @allow (get, list): Any user can read contact information.
     * @deny (create, update, delete): No one can create, update, or delete contact information.
     * @principle Allows public read access for portfolio content.
     */
    match /contactInfo/{contactInfoId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants public read access to "About Me" data.
     * @path /aboutMe/{aboutMeId}
     * @allow (get, list): Any user can read the "About Me" section.
     * @deny (create, update, delete): No one can create, update, or delete the "About Me" section.
     * @principle Allows public read access for portfolio content.
     */
    match /aboutMe/{aboutMeId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows public read and write access to messages.
     * @path /messages/{messageId}
     * @allow (get, list): Any user can read messages.
     * @allow (create): Any user can create messages.
     * @deny (update, delete): No one can update or delete messages.
     * @principle Allows anyone to submit contact form messages, but prevents modification or deletion.
     */
    match /messages/{messageId} {
      allow get, list: if true; // Public read
      allow create: if true; // Public write
      allow update: if false; // No edits or deletes
      allow delete: if false;
    }
  }
}